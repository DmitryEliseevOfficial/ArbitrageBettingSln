<Window x:Class="ABClient.Views.SettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cef="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
        xmlns:fl ="clr-namespace:System;assembly=mscorlib"
        xmlns:abClient="clr-namespace:ABClient"
        mc:Ignorable="d"
        Title="Настройки" 
        Height="626"
        Width="964"
        ResizeMode="NoResize"
        FontFamily="/ABClient;component/Asset/#Archangelsk"
        Icon="/ABClient;component/Asset/ico_512.ico"
       >

    <Window.Resources>
     
        
        <!--Buttons style-->
        <Style  TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Foreground" Value="#1E2026"></Setter>  
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}" >
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="3" BorderThickness="0" Background="#0ca769">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="0,0,0,0">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"  Value="True">
                                <Setter Property="Background" TargetName="border" Value="#1bcc80" />
                            </Trigger>
                            <Trigger Property="IsPressed"  Value="True">
                                <Setter Property="Background" TargetName="border" Value="#0d8451" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"  
                                                          Width="18" 
                                                          Height="18" 
                                                          CornerRadius="9" 
                                                          Background="Transparent"
                                                          BorderBrush="#ee7849"
                                                          BorderThickness="2"
                                                        >

                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="8,0,0,0"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Left"
                                                        RecognizesAccessKey="True"/>
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="BorderThickness" Value="9"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#f9b9a2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="BorderBrush" Value="{x:Null}"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="SelectionBrush" Value="#FF171B26"></Setter>
            <Setter Property="Background" Value="#FF1E2026"></Setter>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border
                            x:Name="Bd"
                            CornerRadius="5"
                            Padding="5,2,0,0"
                            Background="{TemplateBinding Background}"
                            >
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TabItem.Static.Background" Color="#6e6e6e">
        </SolidColorBrush>
      

        <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="#252a2d">
        </SolidColorBrush>

        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="Red"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>

        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#363c41"/>
        <fl:Double x:Key="CostumTabSize">90</fl:Double>
        <fl:Double x:Key="CostumTabSizeBig">150</fl:Double>

        <Style  TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="White"/>            
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Margin" Value="-2,0,0,0"/>
            <Setter Property="Padding" Value="6,6,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" MinHeight="25" >
                            <Border x:Name="mainBorder" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid Background="#1e2026">
        <Grid.RowDefinitions>
            <RowDefinition Height="239*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Image Source="/ABClient;component/Asset/Theme/navbar_green.png" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Fill" Width="30" Height="30" Margin="20,0,0,0"/>

        <TabControl x:Name="tbcTabs" Grid.Row="0" Grid.RowSpan="2" Margin="0,30,0,0" Background="#363c41">
            <TabControl.Resources>
                <Style  TargetType="{x:Type TabControl}">
                    <Setter Property="OverridesDefaultStyle"  Value="True" />
                    <Setter Property="SnapsToDevicePixels"    Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <Grid KeyboardNavigation.TabNavigation="Local">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                    (SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFAAAAAA" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <TabPanel x:Name="HeaderPanel"
                    Grid.Row="0"
                    Panel.ZIndex="1"
                    Margin="0,0,0,0"
                    IsItemsHost="True"
                    KeyboardNavigation.TabIndex="1"                    
                                              />
                                    <Border x:Name="Border"
                  Grid.Row="1"
                  BorderThickness="0"
                  CornerRadius="0"
                  KeyboardNavigation.TabNavigation="Cycle"
                  KeyboardNavigation.DirectionalNavigation="Cycle"
                  KeyboardNavigation.TabIndex="2"
                  Background="{TemplateBinding Background}">

                                        <ContentPresenter x:Name="PART_SelectedContentHost"
                              Margin="0"
                              ContentSource="SelectedContent"
                                                          HorizontalAlignment="Stretch"
                                                          />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>

            <TabItem Header="Основные" Width="{StaticResource CostumTabSize}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel VerticalAlignment="Top" Margin="25,20,0,0" >
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,30">
                            <Label Content="Логин" Margin="0,0,24,0"/>
                            <TextBox HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding Login}" VerticalAlignment="Center" Padding="5,5" Width="86" Margin="0,0,20,0"/>
                            <Label x:Name="btnLeft"  Content="Загружаем" />
                        </StackPanel>

                        <CheckBox IsChecked="{Binding IsFocusShow1, Mode=TwoWay}" Content="Не ставить сканер на паузу при наведении" Margin="0,0,0,15"/>
                        <CheckBox  IsChecked="{Binding IsDoubleButton, Mode=TwoWay}" Content="Одновременный клик ставок" Margin="0,0,0,15"/>
                        <CheckBox IsChecked="{Binding IsMusic, Mode=TwoWay}" Content="Звук появления вилок" Margin="0,0,0,15"/>
                        <CheckBox Visibility="Collapsed" IsChecked="{Binding IsCheckBalance, Mode=TwoWay}" Content="Учитывать баланс в калькуляторе, при расчетах"
                                  ToolTip="Данная функция работает коректно, когда вы авторизованны в БК" Margin="0,0,0,15"/>

                        <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                            <Label Content="Максимальный банк" Margin="0,0,22,0"/>
                            <TextBox MinWidth="100" Text="{Binding MaxBank, Mode=TwoWay}"  Padding="5,5" Width="100"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <Label Content="% от максимума:  " Margin="0,0,21,0"/>
                            <TextBox MinWidth="100" Text="{Binding MaxPercent, Mode=TwoWay}"  Padding="5,5" Width="100"/>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Margin="0,20,0,0">
                        <Label Content="Курс:" Margin="-10,0,0,10"/>
                        <CheckBox IsChecked="{Binding LoadCourse, Mode=TwoWay}"  x:Name="ckdLoad" Content="Загружать с ЦБ" Margin="0,0,0,15" Click="ckdLoad_Click"/>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <Label Content="1 $ = "/>
                            <TextBox Width="70" Height="20" Text="{Binding CourseUSD, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged , StringFormat=N2}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="1 € = "/>
                            <TextBox Width="70" Height="20" Text="{Binding CourseEUR, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>

                </Grid>
            </TabItem>

            <TabItem Header="Букмекеры" Width="{StaticResource CostumTabSize}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="180"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <!--Start Block Bookmaker`s List-->
                    <ListView x:Name="lvBookmakes" ItemsSource="{Binding bookmakers}" Background="{x:Null}" SelectionChanged="lvBookmakes_SelectionChanged">
                        
                        <ListView.View>
                            <GridView>

                                <GridViewColumn Header="Показывать?">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="{x:Type abClient:Bookmaker}">
                                            <CheckBox IsChecked="{Binding IsShow}"></CheckBox>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Букмекер">
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate DataType="{x:Type abClient:Bookmaker}">
                                            <Label Content="{Binding Name}"></Label>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>
                    <!--End block Bookmaker`s List-->


                    <!--Start block Setting Bookmaker-->
                    <TabControl Grid.Column="1" DataContext="{Binding ElementName=lvBookmakes,Path=SelectedItem,UpdateSourceTrigger=PropertyChanged}" Margin="5,5,0,0">

                        <TabItem Header="Основные" BorderBrush="#FF6E6E6E" BorderThickness="2,2,0,0">
                            <Border BorderBrush="White" BorderThickness="0,0,0,0">
                                <DockPanel Margin="0,0,0,50">
                                    <StackPanel DockPanel.Dock="Top" Margin="5,5,0,0" >
                                        <DockPanel  Margin="0,0,0,5" >
                                            <Label Content="Адрес:" BorderThickness="0,0,5,0" Margin="0,0,6,0"/>
                                            <TextBox  Width="250" x:Name="txtUrl" Text="{Binding Url,Mode=TwoWay}" MinWidth="100" Height="20" VerticalAlignment="Center" Margin="0,0,13,0"/>
                                            <Label Content="Выбрать из списка" Margin="0,0,10,0"/>
                                            <ComboBox x:Name="cmbUrl" MinWidth="150" IsEditable="True" SelectionChanged="cmbUrl_SelectionChanged" VerticalAlignment="Center" FontSize="18" >                                                
                                            </ComboBox>
                                        </DockPanel>
                                        <Button x:Name="BtnCheck" HorizontalAlignment="Left" Margin="15,0,0,10" Height="22" Width="90" Click="BtnCheck_Click">Добавить</Button>
                                    </StackPanel>
                                    <cef:ChromiumWebBrowser Background="White" Margin="0,0,0,10"  Address="{Binding ElementName=txtUrl,Path=Text}" />

                                </DockPanel>
                            </Border>

                        </TabItem>

                        <TabItem Header="Виды Спорта" BorderBrush="#FF6E6E6E">
                            <ListBox Height="200" ItemsSource="{Binding Sports}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Top" Background="{x:Null}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox  IsChecked="{Binding IsFilter,Mode=TwoWay}" Content="{Binding SportType}" Foreground="White"></CheckBox>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Vertical" Margin="10,10,0,10" >

                                        </WrapPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </TabItem>

                    </TabControl>
                    <!--End Block setting Bookmaker-->
                </Grid>
            </TabItem>

            <TabItem Header="Браузер" Width="{StaticResource CostumTabSize}">
                <StackPanel HorizontalAlignment="Center" Margin="25,60,0,0">
                    <Label Content="User-Agent:" Margin="0,0,0,10"/>
                    <ComboBox x:Name="cmbUserAgents" Width="350" SelectedItem="{Binding UserAgent,Mode=TwoWay}" Margin="0,0,0,10" ToolTip="Необходимо перезапустить программу, что бы сменился User-Agent" FontSize="18" VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding IsProxy,Mode=TwoWay}" Content="Proxy" Margin="0,0,0,10"/>
                    <Label Content="Cхема:"/>
                    <TextBox Text="{Binding Proxy,Mode=TwoWay}" ToolTip="Укажите прокси в формате schema://host:port. Например socks5://1.1.1.1:80" Height="25" Padding="5,2,0,0" Margin="0,0,0,10"/>
                    <Button HorizontalAlignment="Center" Click="btnClearCookie_Click" Width="186" Height="30">Удалить все Cookie</Button>
                </StackPanel>
            </TabItem>
            <TabItem Header="Пользовательское соглашение" Width="185">
                <TextBox x:Name="txtLince" Margin="10,10,10,50" ScrollViewer.VerticalScrollBarVisibility="Visible" TextWrapping="Wrap" Padding="5" IsReadOnly="True"/>
            </TabItem>
            <TabItem Header="Партнерская программа" Width="{StaticResource CostumTabSizeBig}">
                <ScrollViewer Margin="10,10,10,50">
                    <Image Source="../ProgramData/Baners/Partners.jpg" Stretch="UniformToFill"/>
                </ScrollViewer>
                
            </TabItem>
            <TabItem Header="Тарифы" Width="{StaticResource CostumTabSize}">
                <Image Margin="10,10,10,50" Source="/ABClient;component/ProgramData/Tarif.jpg" Stretch="UniformToFill"/>
            </TabItem>
            <TabItem Header="Финансы и оплата" Width="{StaticResource CostumTabSizeBig}">
                <Grid Margin="20,20,20,50" Background="#FF1E2026">
                    <TextBlock  TextWrapping="Wrap" SnapsToDevicePixels ="False"  TextOptions.TextFormattingMode="Ideal"  Padding="10,10,9,0" FontSize="18" >Уважаемые пользователи! Оплатить подписку на сервис Вы можете любым удобным для Вас способом на электронный кошелек Qiwi <TextBox FontSize="20" Foreground="#FF0CA769" Margin="0,0,0,-6">+79293658385</TextBox>. В комментариях к платежу,  пожалуйста, не забудьте указать Ваше имя и логин, который вы получите от Администрации. Убедительная просьба проверять правильность платежа до его совершения. Средства, внесенные вами за оплату подписки на сервис, возврату не подлежат(п.п. 3.5. Пользовательского соглашения).</TextBlock>
                </Grid>
            </TabItem>
            <TabItem Header="О программе" Width="{StaticResource CostumTabSize}">
                <Grid Margin="20,20,20,50">
                    <StackPanel>
                        <Label Content="Список горячих клавиш:"/>
                        <StackPanel Margin="20,0,0,0">
                            <Label Content="F1 - Фиксация первого плеча"></Label>
                            <Label Content="F2 - Фиксация второго плеча"></Label>
                            <Label Content="F3 - Фиксация коэфицентов"></Label>
                            <Label Content="F4 - Разворот программы во весь экран"></Label>
                            <Label Content="F5 - Включение/отключение сканера"></Label>
                            <Label Content="F11 - скриншот программы"></Label>

                        </StackPanel>
                    </StackPanel>
                </Grid>
            </TabItem>

        </TabControl>
        
        <StackPanel  Grid.Row="1" Orientation="Horizontal" Margin="20,0,0,0">
            <Image Source="/ABClient;component/Asset/Theme/vilka.png" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" ></Image>
            <Label VerticalAlignment="Center">Версия: </Label>
            <Label x:Name="lblVersion" VerticalAlignment="Center">1.0</Label>
        </StackPanel>
        <Button Grid.Row="1" HorizontalAlignment="Right"  Width="110" x:Name="btnSave" Click="btnSave_Click" Margin="0,10,10,10" >Сохранить</Button>
    </Grid>
</Window>
